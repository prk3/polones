<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="565.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="202806"><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (42 samples, 0.02%)</title><rect x="0.0000%" y="501" width="0.0207%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="42"/><text x="0.2500%" y="511.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_address_mapped (217 samples, 0.11%)</title><rect x="0.0207%" y="501" width="0.1070%" height="15" fill="rgb(217,0,24)" fg:x="42" fg:w="217"/><text x="0.2707%" y="511.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_nametable_address_mapped (75 samples, 0.04%)</title><rect x="0.1277%" y="501" width="0.0370%" height="15" fill="rgb(221,193,54)" fg:x="259" fg:w="75"/><text x="0.3777%" y="511.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_read (22 samples, 0.01%)</title><rect x="0.1647%" y="501" width="0.0108%" height="15" fill="rgb(248,212,6)" fg:x="334" fg:w="22"/><text x="0.4147%" y="511.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_address_mapped (385 samples, 0.19%)</title><rect x="0.1884%" y="469" width="0.1898%" height="15" fill="rgb(208,68,35)" fg:x="382" fg:w="385"/><text x="0.4384%" y="479.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_nametable_address_mapped (155 samples, 0.08%)</title><rect x="0.3782%" y="469" width="0.0764%" height="15" fill="rgb(232,128,0)" fg:x="767" fg:w="155"/><text x="0.6282%" y="479.50"></text></g><g><title>[unknown] (1,390 samples, 0.69%)</title><rect x="0.1884%" y="485" width="0.6854%" height="15" fill="rgb(207,160,47)" fg:x="382" fg:w="1390"/><text x="0.4384%" y="495.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_read (850 samples, 0.42%)</title><rect x="0.4546%" y="469" width="0.4191%" height="15" fill="rgb(228,23,34)" fg:x="922" fg:w="850"/><text x="0.7046%" y="479.50"></text></g><g><title>polones_core::apu::Apu::tick (2,311 samples, 1.14%)</title><rect x="0.8792%" y="485" width="1.1395%" height="15" fill="rgb(218,30,26)" fg:x="1783" fg:w="2311"/><text x="1.1292%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_20 (64 samples, 0.03%)</title><rect x="2.0187%" y="485" width="0.0316%" height="15" fill="rgb(220,122,19)" fg:x="4094" fg:w="64"/><text x="2.2687%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_4C (610 samples, 0.30%)</title><rect x="2.0566%" y="485" width="0.3008%" height="15" fill="rgb(250,228,42)" fg:x="4171" fg:w="610"/><text x="2.3066%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute (195 samples, 0.10%)</title><rect x="2.2613%" y="469" width="0.0962%" height="15" fill="rgb(240,193,28)" fg:x="4586" fg:w="195"/><text x="2.5113%" y="479.50"></text></g><g><title>polones_core::cpu::Cpu::run_60 (50 samples, 0.02%)</title><rect x="2.3574%" y="485" width="0.0247%" height="15" fill="rgb(216,20,37)" fg:x="4781" fg:w="50"/><text x="2.6074%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_8D (34 samples, 0.02%)</title><rect x="2.4003%" y="485" width="0.0168%" height="15" fill="rgb(206,188,39)" fg:x="4868" fg:w="34"/><text x="2.6503%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_99 (52 samples, 0.03%)</title><rect x="2.4200%" y="485" width="0.0256%" height="15" fill="rgb(217,207,13)" fg:x="4908" fg:w="52"/><text x="2.6700%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_AD (131 samples, 0.06%)</title><rect x="2.4649%" y="485" width="0.0646%" height="15" fill="rgb(231,73,38)" fg:x="4999" fg:w="131"/><text x="2.7149%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_B1 (26 samples, 0.01%)</title><rect x="2.5349%" y="485" width="0.0128%" height="15" fill="rgb(225,20,46)" fg:x="5141" fg:w="26"/><text x="2.7849%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_B9 (21 samples, 0.01%)</title><rect x="2.5478%" y="485" width="0.0104%" height="15" fill="rgb(210,31,41)" fg:x="5167" fg:w="21"/><text x="2.7978%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_BD (49 samples, 0.02%)</title><rect x="2.5581%" y="485" width="0.0242%" height="15" fill="rgb(221,200,47)" fg:x="5188" fg:w="49"/><text x="2.8081%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::tick (2,196 samples, 1.08%)</title><rect x="2.6005%" y="485" width="1.0828%" height="15" fill="rgb(226,26,5)" fg:x="5274" fg:w="2196"/><text x="2.8505%" y="495.50"></text></g><g><title>polones_core::nes::CpuBus::write (27 samples, 0.01%)</title><rect x="3.6833%" y="485" width="0.0133%" height="15" fill="rgb(249,33,26)" fg:x="7470" fg:w="27"/><text x="3.9333%" y="495.50"></text></g><g><title>polones_core::ppu::Ppu::set_oam_pattern (287 samples, 0.14%)</title><rect x="3.6966%" y="485" width="0.1415%" height="15" fill="rgb(235,183,28)" fg:x="7497" fg:w="287"/><text x="3.9466%" y="495.50"></text></g><g><title>polones_core::ppu::Ppu::tick (11,422 samples, 5.63%)</title><rect x="3.8382%" y="485" width="5.6320%" height="15" fill="rgb(221,5,38)" fg:x="7784" fg:w="11422"/><text x="4.0882%" y="495.50">polones..</text></g><g><title>polones_core::nes::PpuBus::read (3,114 samples, 1.54%)</title><rect x="7.9347%" y="469" width="1.5355%" height="15" fill="rgb(247,18,42)" fg:x="16092" fg:w="3114"/><text x="8.1847%" y="479.50"></text></g><g><title>[polones-test] (18,851 samples, 9.30%)</title><rect x="0.1780%" y="501" width="9.2951%" height="15" fill="rgb(241,131,45)" fg:x="361" fg:w="18851"/><text x="0.4280%" y="511.50">[polones-test]</text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_address_mapped (580 samples, 0.29%)</title><rect x="9.4746%" y="485" width="0.2860%" height="15" fill="rgb(249,31,29)" fg:x="19215" fg:w="580"/><text x="9.7246%" y="495.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (908 samples, 0.45%)</title><rect x="9.7606%" y="485" width="0.4477%" height="15" fill="rgb(225,111,53)" fg:x="19795" fg:w="908"/><text x="10.0106%" y="495.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_address_mapped (60 samples, 0.03%)</title><rect x="10.2083%" y="485" width="0.0296%" height="15" fill="rgb(238,160,17)" fg:x="20703" fg:w="60"/><text x="10.4583%" y="495.50"></text></g><g><title>[polones-test] (22 samples, 0.01%)</title><rect x="10.2531%" y="485" width="0.0108%" height="15" fill="rgb(214,148,48)" fg:x="20794" fg:w="22"/><text x="10.5031%" y="495.50"></text></g><g><title>polones_core::ppu::Ppu::set_oam_pattern (22 samples, 0.01%)</title><rect x="10.2531%" y="469" width="0.0108%" height="15" fill="rgb(232,36,49)" fg:x="20794" fg:w="22"/><text x="10.5031%" y="479.50"></text></g><g><title>polones_core::apu::Apu::tick (206 samples, 0.10%)</title><rect x="10.2734%" y="485" width="0.1016%" height="15" fill="rgb(209,103,24)" fg:x="20835" fg:w="206"/><text x="10.5234%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_85 (82 samples, 0.04%)</title><rect x="10.4040%" y="485" width="0.0404%" height="15" fill="rgb(229,88,8)" fg:x="21100" fg:w="82"/><text x="10.6540%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_86 (25 samples, 0.01%)</title><rect x="10.4445%" y="485" width="0.0123%" height="15" fill="rgb(213,181,19)" fg:x="21182" fg:w="25"/><text x="10.6945%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_A5 (58 samples, 0.03%)</title><rect x="10.4681%" y="485" width="0.0286%" height="15" fill="rgb(254,191,54)" fg:x="21230" fg:w="58"/><text x="10.7181%" y="495.50"></text></g><g><title>polones_core::cpu::Cpu::run_B5 (37 samples, 0.02%)</title><rect x="10.5036%" y="485" width="0.0182%" height="15" fill="rgb(241,83,37)" fg:x="21302" fg:w="37"/><text x="10.7536%" y="495.50"></text></g><g><title>polones_core::nes::CpuBus::read (411 samples, 0.20%)</title><rect x="10.5446%" y="485" width="0.2027%" height="15" fill="rgb(233,36,39)" fg:x="21385" fg:w="411"/><text x="10.7946%" y="495.50"></text></g><g><title>polones_core::nes::CpuBus::write (61 samples, 0.03%)</title><rect x="10.7472%" y="485" width="0.0301%" height="15" fill="rgb(226,3,54)" fg:x="21796" fg:w="61"/><text x="10.9972%" y="495.50"></text></g><g><title>polones_core::nes::Nes::run_one_cpu_tick (3,967 samples, 1.96%)</title><rect x="10.7773%" y="485" width="1.9561%" height="15" fill="rgb(245,192,40)" fg:x="21857" fg:w="3967"/><text x="11.0273%" y="495.50">p..</text></g><g><title>polones_core::ppu::Ppu::read (27 samples, 0.01%)</title><rect x="12.7334%" y="485" width="0.0133%" height="15" fill="rgb(238,167,29)" fg:x="25824" fg:w="27"/><text x="12.9834%" y="495.50"></text></g><g><title>polones_core::ppu::Ppu::set_oam_pattern (66 samples, 0.03%)</title><rect x="12.7467%" y="485" width="0.0325%" height="15" fill="rgb(232,182,51)" fg:x="25851" fg:w="66"/><text x="12.9967%" y="495.50"></text></g><g><title>polones_core::ppu::Ppu::write (29 samples, 0.01%)</title><rect x="12.7792%" y="485" width="0.0143%" height="15" fill="rgb(231,60,39)" fg:x="25917" fg:w="29"/><text x="13.0292%" y="495.50"></text></g><g><title>polones_test::main (598 samples, 0.29%)</title><rect x="12.7935%" y="485" width="0.2949%" height="15" fill="rgb(208,69,12)" fg:x="25946" fg:w="598"/><text x="13.0435%" y="495.50"></text></g><g><title>[unknown] (7,339 samples, 3.62%)</title><rect x="9.4731%" y="501" width="3.6187%" height="15" fill="rgb(235,93,37)" fg:x="19212" fg:w="7339"/><text x="9.7231%" y="511.50">[unk..</text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (60 samples, 0.03%)</title><rect x="13.3591%" y="197" width="0.0296%" height="15" fill="rgb(213,116,39)" fg:x="27093" fg:w="60"/><text x="13.6091%" y="207.50"></text></g><g><title>core::num::&lt;impl i32&gt;::unchecked_add (60 samples, 0.03%)</title><rect x="13.3591%" y="181" width="0.0296%" height="15" fill="rgb(222,207,29)" fg:x="27093" fg:w="60"/><text x="13.6091%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (589 samples, 0.29%)</title><rect x="13.0992%" y="229" width="0.2904%" height="15" fill="rgb(206,96,30)" fg:x="26566" fg:w="589"/><text x="13.3492%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (589 samples, 0.29%)</title><rect x="13.0992%" y="213" width="0.2904%" height="15" fill="rgb(218,138,4)" fg:x="26566" fg:w="589"/><text x="13.3492%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (22 samples, 0.01%)</title><rect x="16.9260%" y="197" width="0.0108%" height="15" fill="rgb(250,191,14)" fg:x="34327" fg:w="22"/><text x="17.1760%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (301 samples, 0.15%)</title><rect x="17.5448%" y="181" width="0.1484%" height="15" fill="rgb(239,60,40)" fg:x="35582" fg:w="301"/><text x="17.7948%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (301 samples, 0.15%)</title><rect x="17.5448%" y="165" width="0.1484%" height="15" fill="rgb(206,27,48)" fg:x="35582" fg:w="301"/><text x="17.7948%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,523 samples, 1.74%)</title><rect x="16.9369%" y="197" width="1.7371%" height="15" fill="rgb(225,35,8)" fg:x="34349" fg:w="3523"/><text x="17.1869%" y="207.50"></text></g><g><title>core::ptr::write (1,989 samples, 0.98%)</title><rect x="17.6933%" y="181" width="0.9807%" height="15" fill="rgb(250,213,24)" fg:x="35883" fg:w="1989"/><text x="17.9433%" y="191.50"></text></g><g><title>polones_core::apu::Apu::tick (323 samples, 0.16%)</title><rect x="18.6740%" y="197" width="0.1593%" height="15" fill="rgb(247,123,22)" fg:x="37872" fg:w="323"/><text x="18.9240%" y="207.50"></text></g><g><title>polones_core::apu::Pulse::muted (6,019 samples, 2.97%)</title><rect x="18.8333%" y="197" width="2.9679%" height="15" fill="rgb(231,138,38)" fg:x="38195" fg:w="6019"/><text x="19.0833%" y="207.50">pol..</text></g><g><title>polones_core::apu::Pulse::sequencer_mutes_channel (4,771 samples, 2.35%)</title><rect x="19.4486%" y="181" width="2.3525%" height="15" fill="rgb(231,145,46)" fg:x="39443" fg:w="4771"/><text x="19.6986%" y="191.50">p..</text></g><g><title>polones_core::apu::Pulse::tick (3,045 samples, 1.50%)</title><rect x="21.8011%" y="197" width="1.5014%" height="15" fill="rgb(251,118,11)" fg:x="44214" fg:w="3045"/><text x="22.0511%" y="207.50"></text></g><g><title>polones_core::apu::Pulse::volume (290 samples, 0.14%)</title><rect x="23.3075%" y="197" width="0.1430%" height="15" fill="rgb(217,147,25)" fg:x="47269" fg:w="290"/><text x="23.5575%" y="207.50"></text></g><g><title>polones_core::apu::Apu::tick (16,242 samples, 8.01%)</title><rect x="15.4783%" y="213" width="8.0086%" height="15" fill="rgb(247,81,37)" fg:x="31391" fg:w="16242"/><text x="15.7283%" y="223.50">polones_cor..</text></g><g><title>std::f64::&lt;impl f64&gt;::round (74 samples, 0.04%)</title><rect x="23.4505%" y="197" width="0.0365%" height="15" fill="rgb(209,12,38)" fg:x="47559" fg:w="74"/><text x="23.7005%" y="207.50"></text></g><g><title>roundf32x (74 samples, 0.04%)</title><rect x="23.4505%" y="181" width="0.0365%" height="15" fill="rgb(227,1,9)" fg:x="47559" fg:w="74"/><text x="23.7005%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_implied (23 samples, 0.01%)</title><rect x="23.4973%" y="197" width="0.0113%" height="15" fill="rgb(248,47,43)" fg:x="47654" fg:w="23"/><text x="23.7473%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_0A (30 samples, 0.01%)</title><rect x="23.4973%" y="213" width="0.0148%" height="15" fill="rgb(221,10,30)" fg:x="47654" fg:w="30"/><text x="23.7473%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_relative (43 samples, 0.02%)</title><rect x="23.5185%" y="197" width="0.0212%" height="15" fill="rgb(210,229,1)" fg:x="47697" fg:w="43"/><text x="23.7685%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (22 samples, 0.01%)</title><rect x="23.5289%" y="181" width="0.0108%" height="15" fill="rgb(222,148,37)" fg:x="47718" fg:w="22"/><text x="23.7789%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_10 (62 samples, 0.03%)</title><rect x="23.5141%" y="213" width="0.0306%" height="15" fill="rgb(234,67,33)" fg:x="47688" fg:w="62"/><text x="23.7641%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_implied (35 samples, 0.02%)</title><rect x="23.5452%" y="197" width="0.0173%" height="15" fill="rgb(247,98,35)" fg:x="47751" fg:w="35"/><text x="23.7952%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_18 (41 samples, 0.02%)</title><rect x="23.5447%" y="213" width="0.0202%" height="15" fill="rgb(247,138,52)" fg:x="47750" fg:w="41"/><text x="23.7947%" y="223.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (29 samples, 0.01%)</title><rect x="23.5772%" y="181" width="0.0143%" height="15" fill="rgb(213,79,30)" fg:x="47816" fg:w="29"/><text x="23.8272%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute (88 samples, 0.04%)</title><rect x="23.5664%" y="197" width="0.0434%" height="15" fill="rgb(246,177,23)" fg:x="47794" fg:w="88"/><text x="23.8164%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (34 samples, 0.02%)</title><rect x="23.5930%" y="181" width="0.0168%" height="15" fill="rgb(230,62,27)" fg:x="47848" fg:w="34"/><text x="23.8430%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_20 (107 samples, 0.05%)</title><rect x="23.5649%" y="213" width="0.0528%" height="15" fill="rgb(216,154,8)" fg:x="47791" fg:w="107"/><text x="23.8149%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_immediate (22 samples, 0.01%)</title><rect x="23.6201%" y="197" width="0.0108%" height="15" fill="rgb(244,35,45)" fg:x="47903" fg:w="22"/><text x="23.8701%" y="207.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (43 samples, 0.02%)</title><rect x="23.6354%" y="165" width="0.0212%" height="15" fill="rgb(251,115,12)" fg:x="47934" fg:w="43"/><text x="23.8854%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::get_operand_byte (105 samples, 0.05%)</title><rect x="23.6354%" y="181" width="0.0518%" height="15" fill="rgb(240,54,50)" fg:x="47934" fg:w="105"/><text x="23.8854%" y="191.50"></text></g><g><title>polones_core::nes::CpuBus::read (62 samples, 0.03%)</title><rect x="23.6566%" y="165" width="0.0306%" height="15" fill="rgb(233,84,52)" fg:x="47977" fg:w="62"/><text x="23.9066%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::run_29 (152 samples, 0.07%)</title><rect x="23.6201%" y="213" width="0.0749%" height="15" fill="rgb(207,117,47)" fg:x="47903" fg:w="152"/><text x="23.8701%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::and (130 samples, 0.06%)</title><rect x="23.6310%" y="197" width="0.0641%" height="15" fill="rgb(249,43,39)" fg:x="47925" fg:w="130"/><text x="23.8810%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_implied (22 samples, 0.01%)</title><rect x="23.7335%" y="197" width="0.0108%" height="15" fill="rgb(209,38,44)" fg:x="48133" fg:w="22"/><text x="23.9835%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_4A (32 samples, 0.02%)</title><rect x="23.7311%" y="213" width="0.0158%" height="15" fill="rgb(236,212,23)" fg:x="48128" fg:w="32"/><text x="23.9811%" y="223.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (126 samples, 0.06%)</title><rect x="24.6551%" y="165" width="0.0621%" height="15" fill="rgb(242,79,21)" fg:x="50002" fg:w="126"/><text x="24.9051%" y="175.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (1,335 samples, 0.66%)</title><rect x="24.2019%" y="181" width="0.6583%" height="15" fill="rgb(211,96,35)" fg:x="49083" fg:w="1335"/><text x="24.4519%" y="191.50"></text></g><g><title>polones_core::game_file::GameFile::prg_rom (290 samples, 0.14%)</title><rect x="24.7172%" y="165" width="0.1430%" height="15" fill="rgb(253,215,40)" fg:x="50128" fg:w="290"/><text x="24.9672%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (115 samples, 0.06%)</title><rect x="24.8035%" y="149" width="0.0567%" height="15" fill="rgb(211,81,21)" fg:x="50303" fg:w="115"/><text x="25.0535%" y="159.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (115 samples, 0.06%)</title><rect x="24.8035%" y="133" width="0.0567%" height="15" fill="rgb(208,190,38)" fg:x="50303" fg:w="115"/><text x="25.0535%" y="143.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (115 samples, 0.06%)</title><rect x="24.8035%" y="117" width="0.0567%" height="15" fill="rgb(235,213,38)" fg:x="50303" fg:w="115"/><text x="25.0535%" y="127.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (59 samples, 0.03%)</title><rect x="24.8311%" y="101" width="0.0291%" height="15" fill="rgb(237,122,38)" fg:x="50359" fg:w="59"/><text x="25.0811%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (59 samples, 0.03%)</title><rect x="24.8311%" y="85" width="0.0291%" height="15" fill="rgb(244,218,35)" fg:x="50359" fg:w="59"/><text x="25.0811%" y="95.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (59 samples, 0.03%)</title><rect x="24.8311%" y="69" width="0.0291%" height="15" fill="rgb(240,68,47)" fg:x="50359" fg:w="59"/><text x="25.0811%" y="79.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_add (120 samples, 0.06%)</title><rect x="24.8602%" y="181" width="0.0592%" height="15" fill="rgb(210,16,53)" fg:x="50418" fg:w="120"/><text x="25.1102%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute (4,636 samples, 2.29%)</title><rect x="23.7809%" y="197" width="2.2859%" height="15" fill="rgb(235,124,12)" fg:x="48229" fg:w="4636"/><text x="24.0309%" y="207.50">p..</text></g><g><title>polones_core::nes::CpuBus::read (2,327 samples, 1.15%)</title><rect x="24.9194%" y="181" width="1.1474%" height="15" fill="rgb(224,169,11)" fg:x="50538" fg:w="2327"/><text x="25.1694%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_address_mapped (784 samples, 0.39%)</title><rect x="25.6802%" y="165" width="0.3866%" height="15" fill="rgb(250,166,2)" fg:x="52081" fg:w="784"/><text x="25.9302%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::run_4C (4,744 samples, 2.34%)</title><rect x="23.7468%" y="213" width="2.3392%" height="15" fill="rgb(242,216,29)" fg:x="48160" fg:w="4744"/><text x="23.9968%" y="223.50">p..</text></g><g><title>polones_core::cpu::Cpu::jump (39 samples, 0.02%)</title><rect x="26.0668%" y="197" width="0.0192%" height="15" fill="rgb(230,116,27)" fg:x="52865" fg:w="39"/><text x="26.3168%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_60 (29 samples, 0.01%)</title><rect x="26.0860%" y="213" width="0.0143%" height="15" fill="rgb(228,99,48)" fg:x="52904" fg:w="29"/><text x="26.3360%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::return_from_subroutine (22 samples, 0.01%)</title><rect x="26.0895%" y="197" width="0.0108%" height="15" fill="rgb(253,11,6)" fg:x="52911" fg:w="22"/><text x="26.3395%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::add_with_carry (27 samples, 0.01%)</title><rect x="26.1117%" y="197" width="0.0133%" height="15" fill="rgb(247,143,39)" fg:x="52956" fg:w="27"/><text x="26.3617%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_69 (32 samples, 0.02%)</title><rect x="26.1117%" y="213" width="0.0158%" height="15" fill="rgb(236,97,10)" fg:x="52956" fg:w="32"/><text x="26.3617%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::run_79 (44 samples, 0.02%)</title><rect x="26.1368%" y="213" width="0.0217%" height="15" fill="rgb(233,208,19)" fg:x="53007" fg:w="44"/><text x="26.3868%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute_y_indexed (27 samples, 0.01%)</title><rect x="26.1452%" y="197" width="0.0133%" height="15" fill="rgb(216,164,2)" fg:x="53024" fg:w="27"/><text x="26.3952%" y="207.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (29 samples, 0.01%)</title><rect x="26.1901%" y="181" width="0.0143%" height="15" fill="rgb(220,129,5)" fg:x="53115" fg:w="29"/><text x="26.4401%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_zeropage (91 samples, 0.04%)</title><rect x="26.1832%" y="197" width="0.0449%" height="15" fill="rgb(242,17,10)" fg:x="53101" fg:w="91"/><text x="26.4332%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (47 samples, 0.02%)</title><rect x="26.2048%" y="181" width="0.0232%" height="15" fill="rgb(242,107,0)" fg:x="53145" fg:w="47"/><text x="26.4548%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_85 (123 samples, 0.06%)</title><rect x="26.1738%" y="213" width="0.0606%" height="15" fill="rgb(251,28,31)" fg:x="53082" fg:w="123"/><text x="26.4238%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::run_88 (37 samples, 0.02%)</title><rect x="26.2438%" y="213" width="0.0182%" height="15" fill="rgb(233,223,10)" fg:x="53224" fg:w="37"/><text x="26.4938%" y="223.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (22 samples, 0.01%)</title><rect x="26.2704%" y="117" width="0.0108%" height="15" fill="rgb(215,21,27)" fg:x="53278" fg:w="22"/><text x="26.5204%" y="127.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (22 samples, 0.01%)</title><rect x="26.2704%" y="101" width="0.0108%" height="15" fill="rgb(232,23,21)" fg:x="53278" fg:w="22"/><text x="26.5204%" y="111.50"></text></g><g><title>polones_core::apu::Apu::write (29 samples, 0.01%)</title><rect x="26.2694%" y="165" width="0.0143%" height="15" fill="rgb(244,5,23)" fg:x="53276" fg:w="29"/><text x="26.5194%" y="175.50"></text></g><g><title>std::io::stdio::_eprint (27 samples, 0.01%)</title><rect x="26.2704%" y="149" width="0.0133%" height="15" fill="rgb(226,81,46)" fg:x="53278" fg:w="27"/><text x="26.5204%" y="159.50"></text></g><g><title>std::io::stdio::print_to (27 samples, 0.01%)</title><rect x="26.2704%" y="133" width="0.0133%" height="15" fill="rgb(247,70,30)" fg:x="53278" fg:w="27"/><text x="26.5204%" y="143.50"></text></g><g><title>polones_core::cpu::Cpu::run_8C (38 samples, 0.02%)</title><rect x="26.2660%" y="213" width="0.0187%" height="15" fill="rgb(212,68,19)" fg:x="53269" fg:w="38"/><text x="26.5160%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::store_y (31 samples, 0.02%)</title><rect x="26.2694%" y="197" width="0.0153%" height="15" fill="rgb(240,187,13)" fg:x="53276" fg:w="31"/><text x="26.5194%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::set_operand_byte (31 samples, 0.02%)</title><rect x="26.2694%" y="181" width="0.0153%" height="15" fill="rgb(223,113,26)" fg:x="53276" fg:w="31"/><text x="26.5194%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute (54 samples, 0.03%)</title><rect x="26.2872%" y="197" width="0.0266%" height="15" fill="rgb(206,192,2)" fg:x="53312" fg:w="54"/><text x="26.5372%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (27 samples, 0.01%)</title><rect x="26.3005%" y="181" width="0.0133%" height="15" fill="rgb(241,108,4)" fg:x="53339" fg:w="27"/><text x="26.5505%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_8D (101 samples, 0.05%)</title><rect x="26.2847%" y="213" width="0.0498%" height="15" fill="rgb(247,173,49)" fg:x="53307" fg:w="101"/><text x="26.5347%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::store_accumulator (42 samples, 0.02%)</title><rect x="26.3138%" y="197" width="0.0207%" height="15" fill="rgb(224,114,35)" fg:x="53366" fg:w="42"/><text x="26.5638%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::set_operand_byte (42 samples, 0.02%)</title><rect x="26.3138%" y="181" width="0.0207%" height="15" fill="rgb(245,159,27)" fg:x="53366" fg:w="42"/><text x="26.5638%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_relative (30 samples, 0.01%)</title><rect x="26.3390%" y="197" width="0.0148%" height="15" fill="rgb(245,172,44)" fg:x="53417" fg:w="30"/><text x="26.5890%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_90 (40 samples, 0.02%)</title><rect x="26.3365%" y="213" width="0.0197%" height="15" fill="rgb(236,23,11)" fg:x="53412" fg:w="40"/><text x="26.5865%" y="223.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (44 samples, 0.02%)</title><rect x="26.3843%" y="181" width="0.0217%" height="15" fill="rgb(205,117,38)" fg:x="53509" fg:w="44"/><text x="26.6343%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute_y_indexed (117 samples, 0.06%)</title><rect x="26.3750%" y="197" width="0.0577%" height="15" fill="rgb(237,72,25)" fg:x="53490" fg:w="117"/><text x="26.6250%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (50 samples, 0.02%)</title><rect x="26.4080%" y="181" width="0.0247%" height="15" fill="rgb(244,70,9)" fg:x="53557" fg:w="50"/><text x="26.6580%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_99 (142 samples, 0.07%)</title><rect x="26.3681%" y="213" width="0.0700%" height="15" fill="rgb(217,125,39)" fg:x="53476" fg:w="142"/><text x="26.6181%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute_x_indexed (43 samples, 0.02%)</title><rect x="26.4400%" y="197" width="0.0212%" height="15" fill="rgb(235,36,10)" fg:x="53622" fg:w="43"/><text x="26.6900%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_9D (55 samples, 0.03%)</title><rect x="26.4381%" y="213" width="0.0271%" height="15" fill="rgb(251,123,47)" fg:x="53618" fg:w="55"/><text x="26.6881%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::run_A0 (21 samples, 0.01%)</title><rect x="26.4652%" y="213" width="0.0104%" height="15" fill="rgb(221,13,13)" fg:x="53673" fg:w="21"/><text x="26.7152%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::run_A2 (25 samples, 0.01%)</title><rect x="26.4755%" y="213" width="0.0123%" height="15" fill="rgb(238,131,9)" fg:x="53694" fg:w="25"/><text x="26.7255%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::run_A4 (26 samples, 0.01%)</title><rect x="26.4879%" y="213" width="0.0128%" height="15" fill="rgb(211,50,8)" fg:x="53719" fg:w="26"/><text x="26.7379%" y="223.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (21 samples, 0.01%)</title><rect x="26.5051%" y="181" width="0.0104%" height="15" fill="rgb(245,182,24)" fg:x="53754" fg:w="21"/><text x="26.7551%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_zeropage (64 samples, 0.03%)</title><rect x="26.5012%" y="197" width="0.0316%" height="15" fill="rgb(242,14,37)" fg:x="53746" fg:w="64"/><text x="26.7512%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (33 samples, 0.02%)</title><rect x="26.5165%" y="181" width="0.0163%" height="15" fill="rgb(246,228,12)" fg:x="53777" fg:w="33"/><text x="26.7665%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_A5 (86 samples, 0.04%)</title><rect x="26.5007%" y="213" width="0.0424%" height="15" fill="rgb(213,55,15)" fg:x="53745" fg:w="86"/><text x="26.7507%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::load_accumulator (21 samples, 0.01%)</title><rect x="26.5327%" y="197" width="0.0104%" height="15" fill="rgb(209,9,3)" fg:x="53810" fg:w="21"/><text x="26.7827%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_A6 (27 samples, 0.01%)</title><rect x="26.5431%" y="213" width="0.0133%" height="15" fill="rgb(230,59,30)" fg:x="53831" fg:w="27"/><text x="26.7931%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_implied (21 samples, 0.01%)</title><rect x="26.5569%" y="197" width="0.0104%" height="15" fill="rgb(209,121,21)" fg:x="53859" fg:w="21"/><text x="26.8069%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_A8 (23 samples, 0.01%)</title><rect x="26.5564%" y="213" width="0.0113%" height="15" fill="rgb(220,109,13)" fg:x="53858" fg:w="23"/><text x="26.8064%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::get_operand_byte (31 samples, 0.02%)</title><rect x="26.5732%" y="181" width="0.0153%" height="15" fill="rgb(232,18,1)" fg:x="53892" fg:w="31"/><text x="26.8232%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_A9 (45 samples, 0.02%)</title><rect x="26.5678%" y="213" width="0.0222%" height="15" fill="rgb(215,41,42)" fg:x="53881" fg:w="45"/><text x="26.8178%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::load_accumulator (36 samples, 0.02%)</title><rect x="26.5722%" y="197" width="0.0178%" height="15" fill="rgb(224,123,36)" fg:x="53890" fg:w="36"/><text x="26.8222%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute (35 samples, 0.02%)</title><rect x="26.5949%" y="197" width="0.0173%" height="15" fill="rgb(240,125,3)" fg:x="53936" fg:w="35"/><text x="26.8449%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (23 samples, 0.01%)</title><rect x="26.6008%" y="181" width="0.0113%" height="15" fill="rgb(205,98,50)" fg:x="53948" fg:w="23"/><text x="26.8508%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_AC (41 samples, 0.02%)</title><rect x="26.5949%" y="213" width="0.0202%" height="15" fill="rgb(205,185,37)" fg:x="53936" fg:w="41"/><text x="26.8449%" y="223.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (89 samples, 0.04%)</title><rect x="26.6215%" y="181" width="0.0439%" height="15" fill="rgb(238,207,15)" fg:x="53990" fg:w="89"/><text x="26.8715%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute (234 samples, 0.12%)</title><rect x="26.6151%" y="197" width="0.1154%" height="15" fill="rgb(213,199,42)" fg:x="53977" fg:w="234"/><text x="26.8651%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (126 samples, 0.06%)</title><rect x="26.6683%" y="181" width="0.0621%" height="15" fill="rgb(235,201,11)" fg:x="54085" fg:w="126"/><text x="26.9183%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_address_mapped (43 samples, 0.02%)</title><rect x="26.7093%" y="165" width="0.0212%" height="15" fill="rgb(207,46,11)" fg:x="54168" fg:w="43"/><text x="26.9593%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::get_operand_byte (27 samples, 0.01%)</title><rect x="26.7359%" y="181" width="0.0133%" height="15" fill="rgb(241,35,35)" fg:x="54222" fg:w="27"/><text x="26.9859%" y="191.50"></text></g><g><title>polones_core::nes::CpuBus::read (27 samples, 0.01%)</title><rect x="26.7359%" y="165" width="0.0133%" height="15" fill="rgb(243,32,47)" fg:x="54222" fg:w="27"/><text x="26.9859%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::run_AD (281 samples, 0.14%)</title><rect x="26.6151%" y="213" width="0.1386%" height="15" fill="rgb(247,202,23)" fg:x="53977" fg:w="281"/><text x="26.8651%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::load_accumulator (47 samples, 0.02%)</title><rect x="26.7305%" y="197" width="0.0232%" height="15" fill="rgb(219,102,11)" fg:x="54211" fg:w="47"/><text x="26.9805%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_B0 (33 samples, 0.02%)</title><rect x="26.7605%" y="213" width="0.0163%" height="15" fill="rgb(243,110,44)" fg:x="54272" fg:w="33"/><text x="27.0105%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_indirect_y_indexed (33 samples, 0.02%)</title><rect x="26.7778%" y="197" width="0.0163%" height="15" fill="rgb(222,74,54)" fg:x="54307" fg:w="33"/><text x="27.0278%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_B1 (55 samples, 0.03%)</title><rect x="26.7768%" y="213" width="0.0271%" height="15" fill="rgb(216,99,12)" fg:x="54305" fg:w="55"/><text x="27.0268%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_zeropage_x_indexed (45 samples, 0.02%)</title><rect x="26.8044%" y="197" width="0.0222%" height="15" fill="rgb(226,22,26)" fg:x="54361" fg:w="45"/><text x="27.0544%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (24 samples, 0.01%)</title><rect x="26.8148%" y="181" width="0.0118%" height="15" fill="rgb(217,163,10)" fg:x="54382" fg:w="24"/><text x="27.0648%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_B5 (59 samples, 0.03%)</title><rect x="26.8044%" y="213" width="0.0291%" height="15" fill="rgb(213,25,53)" fg:x="54361" fg:w="59"/><text x="27.0544%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute_y_indexed (44 samples, 0.02%)</title><rect x="26.8335%" y="197" width="0.0217%" height="15" fill="rgb(252,105,26)" fg:x="54420" fg:w="44"/><text x="27.0835%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (23 samples, 0.01%)</title><rect x="26.8439%" y="181" width="0.0113%" height="15" fill="rgb(220,39,43)" fg:x="54441" fg:w="23"/><text x="27.0939%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_B9 (70 samples, 0.03%)</title><rect x="26.8335%" y="213" width="0.0345%" height="15" fill="rgb(229,68,48)" fg:x="54420" fg:w="70"/><text x="27.0835%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::load_accumulator (26 samples, 0.01%)</title><rect x="26.8552%" y="197" width="0.0128%" height="15" fill="rgb(252,8,32)" fg:x="54464" fg:w="26"/><text x="27.1052%" y="207.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (52 samples, 0.03%)</title><rect x="26.8749%" y="181" width="0.0256%" height="15" fill="rgb(223,20,43)" fg:x="54504" fg:w="52"/><text x="27.1249%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_absolute_x_indexed (125 samples, 0.06%)</title><rect x="26.8695%" y="197" width="0.0616%" height="15" fill="rgb(229,81,49)" fg:x="54493" fg:w="125"/><text x="27.1195%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (59 samples, 0.03%)</title><rect x="26.9021%" y="181" width="0.0291%" height="15" fill="rgb(236,28,36)" fg:x="54559" fg:w="59"/><text x="27.1521%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_address_mapped (21 samples, 0.01%)</title><rect x="26.9208%" y="165" width="0.0104%" height="15" fill="rgb(249,185,26)" fg:x="54597" fg:w="21"/><text x="27.1708%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::get_operand_byte (24 samples, 0.01%)</title><rect x="26.9326%" y="181" width="0.0118%" height="15" fill="rgb(249,174,33)" fg:x="54621" fg:w="24"/><text x="27.1826%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_BD (157 samples, 0.08%)</title><rect x="26.8690%" y="213" width="0.0774%" height="15" fill="rgb(233,201,37)" fg:x="54492" fg:w="157"/><text x="27.1190%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::load_accumulator (31 samples, 0.02%)</title><rect x="26.9312%" y="197" width="0.0153%" height="15" fill="rgb(221,78,26)" fg:x="54618" fg:w="31"/><text x="27.1812%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_BE (21 samples, 0.01%)</title><rect x="26.9464%" y="213" width="0.0104%" height="15" fill="rgb(250,127,30)" fg:x="54649" fg:w="21"/><text x="27.1964%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::run_C0 (22 samples, 0.01%)</title><rect x="26.9568%" y="213" width="0.0108%" height="15" fill="rgb(230,49,44)" fg:x="54670" fg:w="22"/><text x="27.2068%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_implied (38 samples, 0.02%)</title><rect x="26.9800%" y="197" width="0.0187%" height="15" fill="rgb(229,67,23)" fg:x="54717" fg:w="38"/><text x="27.2300%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_C8 (50 samples, 0.02%)</title><rect x="26.9790%" y="213" width="0.0247%" height="15" fill="rgb(249,83,47)" fg:x="54715" fg:w="50"/><text x="27.2290%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::get_operand_byte (51 samples, 0.03%)</title><rect x="27.0155%" y="181" width="0.0251%" height="15" fill="rgb(215,43,3)" fg:x="54789" fg:w="51"/><text x="27.2655%" y="191.50"></text></g><g><title>polones_core::nes::CpuBus::read (32 samples, 0.02%)</title><rect x="27.0248%" y="165" width="0.0158%" height="15" fill="rgb(238,154,13)" fg:x="54808" fg:w="32"/><text x="27.2748%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::run_C9 (81 samples, 0.04%)</title><rect x="27.0036%" y="213" width="0.0399%" height="15" fill="rgb(219,56,2)" fg:x="54765" fg:w="81"/><text x="27.2536%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::compare (62 samples, 0.03%)</title><rect x="27.0130%" y="197" width="0.0306%" height="15" fill="rgb(233,0,4)" fg:x="54784" fg:w="62"/><text x="27.2630%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_implied (22 samples, 0.01%)</title><rect x="27.0436%" y="197" width="0.0108%" height="15" fill="rgb(235,30,7)" fg:x="54846" fg:w="22"/><text x="27.2936%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_CA (25 samples, 0.01%)</title><rect x="27.0436%" y="213" width="0.0123%" height="15" fill="rgb(250,79,13)" fg:x="54846" fg:w="25"/><text x="27.2936%" y="223.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (46 samples, 0.02%)</title><rect x="27.0815%" y="181" width="0.0227%" height="15" fill="rgb(211,146,34)" fg:x="54923" fg:w="46"/><text x="27.3315%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_relative (126 samples, 0.06%)</title><rect x="27.0722%" y="197" width="0.0621%" height="15" fill="rgb(228,22,38)" fg:x="54904" fg:w="126"/><text x="27.3222%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (61 samples, 0.03%)</title><rect x="27.1042%" y="181" width="0.0301%" height="15" fill="rgb(235,168,5)" fg:x="54969" fg:w="61"/><text x="27.3542%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_address_mapped (25 samples, 0.01%)</title><rect x="27.1220%" y="165" width="0.0123%" height="15" fill="rgb(221,155,16)" fg:x="55005" fg:w="25"/><text x="27.3720%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::run_D0 (168 samples, 0.08%)</title><rect x="27.0618%" y="213" width="0.0828%" height="15" fill="rgb(215,215,53)" fg:x="54883" fg:w="168"/><text x="27.3118%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::branch_on_not_equal (21 samples, 0.01%)</title><rect x="27.1343%" y="197" width="0.0104%" height="15" fill="rgb(223,4,10)" fg:x="55030" fg:w="21"/><text x="27.3843%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_E0 (22 samples, 0.01%)</title><rect x="27.1521%" y="213" width="0.0108%" height="15" fill="rgb(234,103,6)" fg:x="55066" fg:w="22"/><text x="27.4021%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_implied (24 samples, 0.01%)</title><rect x="27.1644%" y="197" width="0.0118%" height="15" fill="rgb(227,97,0)" fg:x="55091" fg:w="24"/><text x="27.4144%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_E8 (25 samples, 0.01%)</title><rect x="27.1644%" y="213" width="0.0123%" height="15" fill="rgb(234,150,53)" fg:x="55091" fg:w="25"/><text x="27.4144%" y="223.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (46 samples, 0.02%)</title><rect x="27.2063%" y="181" width="0.0227%" height="15" fill="rgb(228,201,54)" fg:x="55176" fg:w="46"/><text x="27.4563%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::address_mode_relative (138 samples, 0.07%)</title><rect x="27.2004%" y="197" width="0.0680%" height="15" fill="rgb(222,22,37)" fg:x="55164" fg:w="138"/><text x="27.4504%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::read (79 samples, 0.04%)</title><rect x="27.2295%" y="181" width="0.0390%" height="15" fill="rgb(237,53,32)" fg:x="55223" fg:w="79"/><text x="27.4795%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_address_mapped (26 samples, 0.01%)</title><rect x="27.2556%" y="165" width="0.0128%" height="15" fill="rgb(233,25,53)" fg:x="55276" fg:w="26"/><text x="27.5056%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::branch (27 samples, 0.01%)</title><rect x="27.2694%" y="181" width="0.0133%" height="15" fill="rgb(210,40,34)" fg:x="55304" fg:w="27"/><text x="27.5194%" y="191.50"></text></g><g><title>polones_core::cpu::Cpu::run_F0 (197 samples, 0.10%)</title><rect x="27.1866%" y="213" width="0.0971%" height="15" fill="rgb(241,220,44)" fg:x="55136" fg:w="197"/><text x="27.4366%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::branch_on_equal (31 samples, 0.02%)</title><rect x="27.2684%" y="197" width="0.0153%" height="15" fill="rgb(235,28,35)" fg:x="55302" fg:w="31"/><text x="27.5184%" y="207.50"></text></g><g><title>polones_core::cpu::Cpu::run_F5 (22 samples, 0.01%)</title><rect x="27.2837%" y="213" width="0.0108%" height="15" fill="rgb(210,56,17)" fg:x="55333" fg:w="22"/><text x="27.5337%" y="223.50"></text></g><g><title>polones_core::cpu::Cpu::run_F9 (21 samples, 0.01%)</title><rect x="27.2946%" y="213" width="0.0104%" height="15" fill="rgb(224,130,29)" fg:x="55355" fg:w="21"/><text x="27.5446%" y="223.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (128 samples, 0.06%)</title><rect x="30.7910%" y="181" width="0.0631%" height="15" fill="rgb(235,212,8)" fg:x="62446" fg:w="128"/><text x="31.0410%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_read (1,901 samples, 0.94%)</title><rect x="30.1076%" y="197" width="0.9373%" height="15" fill="rgb(223,33,50)" fg:x="61060" fg:w="1901"/><text x="30.3576%" y="207.50"></text></g><g><title>polones_core::game_file::GameFile::prg_rom (387 samples, 0.19%)</title><rect x="30.8541%" y="181" width="0.1908%" height="15" fill="rgb(219,149,13)" fg:x="62574" fg:w="387"/><text x="31.1041%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (234 samples, 0.12%)</title><rect x="30.9296%" y="165" width="0.1154%" height="15" fill="rgb(250,156,29)" fg:x="62727" fg:w="234"/><text x="31.1796%" y="175.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (234 samples, 0.12%)</title><rect x="30.9296%" y="149" width="0.1154%" height="15" fill="rgb(216,193,19)" fg:x="62727" fg:w="234"/><text x="31.1796%" y="159.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (234 samples, 0.12%)</title><rect x="30.9296%" y="133" width="0.1154%" height="15" fill="rgb(216,135,14)" fg:x="62727" fg:w="234"/><text x="31.1796%" y="143.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (89 samples, 0.04%)</title><rect x="31.0011%" y="117" width="0.0439%" height="15" fill="rgb(241,47,5)" fg:x="62872" fg:w="89"/><text x="31.2511%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (89 samples, 0.04%)</title><rect x="31.0011%" y="101" width="0.0439%" height="15" fill="rgb(233,42,35)" fg:x="62872" fg:w="89"/><text x="31.2511%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (89 samples, 0.04%)</title><rect x="31.0011%" y="85" width="0.0439%" height="15" fill="rgb(231,13,6)" fg:x="62872" fg:w="89"/><text x="31.2511%" y="95.50"></text></g><g><title>polones_core::nes::CpuBus::split_into_ppu_and_bus (40 samples, 0.02%)</title><rect x="31.1021%" y="165" width="0.0197%" height="15" fill="rgb(207,181,40)" fg:x="63077" fg:w="40"/><text x="31.3521%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::run_dma (182 samples, 0.09%)</title><rect x="31.0449%" y="197" width="0.0897%" height="15" fill="rgb(254,173,49)" fg:x="62961" fg:w="182"/><text x="31.2949%" y="207.50"></text></g><g><title>polones_core::nes::CpuBus::write (83 samples, 0.04%)</title><rect x="31.0938%" y="181" width="0.0409%" height="15" fill="rgb(221,1,38)" fg:x="63060" fg:w="83"/><text x="31.3438%" y="191.50"></text></g><g><title>polones_core::ppu::Ppu::write (26 samples, 0.01%)</title><rect x="31.1219%" y="165" width="0.0128%" height="15" fill="rgb(206,124,46)" fg:x="63117" fg:w="26"/><text x="31.3719%" y="175.50"></text></g><g><title>polones_core::cpu::Cpu::tick (10,364 samples, 5.11%)</title><rect x="27.3059%" y="213" width="5.1103%" height="15" fill="rgb(249,21,11)" fg:x="55378" fg:w="10364"/><text x="27.5559%" y="223.50">polone..</text></g><g><title>polones_core::nes::CpuBus::read (2,594 samples, 1.28%)</title><rect x="31.1371%" y="197" width="1.2791%" height="15" fill="rgb(222,201,40)" fg:x="63148" fg:w="2594"/><text x="31.3871%" y="207.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::cpu_address_mapped (691 samples, 0.34%)</title><rect x="32.0755%" y="181" width="0.3407%" height="15" fill="rgb(235,61,29)" fg:x="65051" fg:w="691"/><text x="32.3255%" y="191.50"></text></g><g><title>polones_core::nes::CpuBus::split_into_ppu_and_bus (768 samples, 0.38%)</title><rect x="32.4162%" y="213" width="0.3787%" height="15" fill="rgb(219,207,3)" fg:x="65742" fg:w="768"/><text x="32.6662%" y="223.50"></text></g><g><title>polones_core::nes::Nes::split_into_cpu_and_bus (895 samples, 0.44%)</title><rect x="32.7949%" y="213" width="0.4413%" height="15" fill="rgb(222,56,46)" fg:x="66510" fg:w="895"/><text x="33.0449%" y="223.50"></text></g><g><title>polones_core::nes::OamDma::tick (982 samples, 0.48%)</title><rect x="33.2362%" y="213" width="0.4842%" height="15" fill="rgb(239,76,54)" fg:x="67405" fg:w="982"/><text x="33.4862%" y="223.50"></text></g><g><title>__memset_avx2_unaligned_erms (307 samples, 0.15%)</title><rect x="80.1189%" y="181" width="0.1514%" height="15" fill="rgb(231,124,27)" fg:x="162486" fg:w="307"/><text x="80.3689%" y="191.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.01%)</title><rect x="80.2703%" y="117" width="0.0108%" height="15" fill="rgb(249,195,6)" fg:x="162793" fg:w="22"/><text x="80.5203%" y="127.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (334 samples, 0.16%)</title><rect x="80.1189%" y="197" width="0.1647%" height="15" fill="rgb(237,174,47)" fg:x="162486" fg:w="334"/><text x="80.3689%" y="207.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.01%)</title><rect x="80.2703%" y="181" width="0.0133%" height="15" fill="rgb(206,201,31)" fg:x="162793" fg:w="27"/><text x="80.5203%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.01%)</title><rect x="80.2703%" y="165" width="0.0133%" height="15" fill="rgb(231,57,52)" fg:x="162793" fg:w="27"/><text x="80.5203%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.01%)</title><rect x="80.2703%" y="149" width="0.0133%" height="15" fill="rgb(248,177,22)" fg:x="162793" fg:w="27"/><text x="80.5203%" y="159.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.01%)</title><rect x="80.2703%" y="133" width="0.0133%" height="15" fill="rgb(215,211,37)" fg:x="162793" fg:w="27"/><text x="80.5203%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,227 samples, 1.10%)</title><rect x="80.2836%" y="197" width="1.0981%" height="15" fill="rgb(241,128,51)" fg:x="162820" fg:w="2227"/><text x="80.5336%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,227 samples, 1.10%)</title><rect x="80.2836%" y="181" width="1.0981%" height="15" fill="rgb(227,165,31)" fg:x="162820" fg:w="2227"/><text x="80.5336%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (815 samples, 0.40%)</title><rect x="80.9799%" y="165" width="0.4019%" height="15" fill="rgb(228,167,24)" fg:x="164232" fg:w="815"/><text x="81.2299%" y="175.50"></text></g><g><title>core::num::&lt;impl u8&gt;::saturating_add (179 samples, 0.09%)</title><rect x="81.3817%" y="197" width="0.0883%" height="15" fill="rgb(228,143,12)" fg:x="165047" fg:w="179"/><text x="81.6317%" y="207.50"></text></g><g><title>core::ops::range::RangeBounds::contains (6,440 samples, 3.18%)</title><rect x="82.0104%" y="181" width="3.1754%" height="15" fill="rgb(249,149,8)" fg:x="166322" fg:w="6440"/><text x="82.2604%" y="191.50">cor..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (414 samples, 0.20%)</title><rect x="84.9817%" y="165" width="0.2041%" height="15" fill="rgb(243,35,44)" fg:x="172348" fg:w="414"/><text x="85.2317%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u16&gt;::le (414 samples, 0.20%)</title><rect x="84.9817%" y="149" width="0.2041%" height="15" fill="rgb(246,89,9)" fg:x="172348" fg:w="414"/><text x="85.2317%" y="159.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (8,461 samples, 4.17%)</title><rect x="81.4700%" y="197" width="4.1720%" height="15" fill="rgb(233,213,13)" fg:x="165226" fg:w="8461"/><text x="81.7200%" y="207.50">core:..</text></g><g><title>polones_core::ppu::Ppu::tick (925 samples, 0.46%)</title><rect x="85.1858%" y="181" width="0.4561%" height="15" fill="rgb(233,141,41)" fg:x="172762" fg:w="925"/><text x="85.4358%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_address_mapped (1,919 samples, 0.95%)</title><rect x="87.1168%" y="181" width="0.9462%" height="15" fill="rgb(239,167,4)" fg:x="176678" fg:w="1919"/><text x="87.3668%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_nametable_address_mapped (1,418 samples, 0.70%)</title><rect x="88.0630%" y="181" width="0.6992%" height="15" fill="rgb(209,217,16)" fg:x="178597" fg:w="1418"/><text x="88.3130%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_read (2,543 samples, 1.25%)</title><rect x="88.7622%" y="181" width="1.2539%" height="15" fill="rgb(219,88,35)" fg:x="180015" fg:w="2543"/><text x="89.0122%" y="191.50"></text></g><g><title>polones_core::game_file::GameFile::chr_rom (748 samples, 0.37%)</title><rect x="89.6472%" y="165" width="0.3688%" height="15" fill="rgb(220,193,23)" fg:x="181810" fg:w="748"/><text x="89.8972%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (748 samples, 0.37%)</title><rect x="89.6472%" y="149" width="0.3688%" height="15" fill="rgb(230,90,52)" fg:x="181810" fg:w="748"/><text x="89.8972%" y="159.50"></text></g><g><title>polones_core::game_file::GameFile::chr_rom::{{closure}} (499 samples, 0.25%)</title><rect x="89.7700%" y="133" width="0.2460%" height="15" fill="rgb(252,106,19)" fg:x="182059" fg:w="499"/><text x="90.0200%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (499 samples, 0.25%)</title><rect x="89.7700%" y="117" width="0.2460%" height="15" fill="rgb(206,74,20)" fg:x="182059" fg:w="499"/><text x="90.0200%" y="127.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (499 samples, 0.25%)</title><rect x="89.7700%" y="101" width="0.2460%" height="15" fill="rgb(230,138,44)" fg:x="182059" fg:w="499"/><text x="90.0200%" y="111.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (499 samples, 0.25%)</title><rect x="89.7700%" y="85" width="0.2460%" height="15" fill="rgb(235,182,43)" fg:x="182059" fg:w="499"/><text x="90.0200%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (200 samples, 0.10%)</title><rect x="89.9175%" y="69" width="0.0986%" height="15" fill="rgb(242,16,51)" fg:x="182358" fg:w="200"/><text x="90.1675%" y="79.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (200 samples, 0.10%)</title><rect x="89.9175%" y="53" width="0.0986%" height="15" fill="rgb(248,9,4)" fg:x="182358" fg:w="200"/><text x="90.1675%" y="63.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (200 samples, 0.10%)</title><rect x="89.9175%" y="37" width="0.0986%" height="15" fill="rgb(210,31,22)" fg:x="182358" fg:w="200"/><text x="90.1675%" y="47.50"></text></g><g><title>polones_core::nes::PpuBus::read (9,647 samples, 4.76%)</title><rect x="85.6419%" y="197" width="4.7568%" height="15" fill="rgb(239,54,39)" fg:x="173687" fg:w="9647"/><text x="85.8919%" y="207.50">polone..</text></g><g><title>polones_core::ram::Ram&lt;_&gt;::read (776 samples, 0.38%)</title><rect x="90.0161%" y="181" width="0.3826%" height="15" fill="rgb(230,99,41)" fg:x="182558" fg:w="776"/><text x="90.2661%" y="191.50"></text></g><g><title>polones_core::ppu::ControlRegister::get_background_tile_select (246 samples, 0.12%)</title><rect x="90.3987%" y="197" width="0.1213%" height="15" fill="rgb(253,106,12)" fg:x="183334" fg:w="246"/><text x="90.6487%" y="207.50"></text></g><g><title>polones_core::ppu::ControlRegister::get_sprite_height (60 samples, 0.03%)</title><rect x="90.5200%" y="197" width="0.0296%" height="15" fill="rgb(213,46,41)" fg:x="183580" fg:w="60"/><text x="90.7700%" y="207.50"></text></g><g><title>polones_core::ppu::Loopy::get_coarse_y_scroll (46 samples, 0.02%)</title><rect x="90.5521%" y="197" width="0.0227%" height="15" fill="rgb(215,133,35)" fg:x="183645" fg:w="46"/><text x="90.8021%" y="207.50"></text></g><g><title>polones_core::ppu::Loopy::get_fine_y_scroll (116 samples, 0.06%)</title><rect x="90.5747%" y="197" width="0.0572%" height="15" fill="rgb(213,28,5)" fg:x="183691" fg:w="116"/><text x="90.8247%" y="207.50"></text></g><g><title>polones_core::ppu::Loopy::get_nametable_select (1,784 samples, 0.88%)</title><rect x="90.6319%" y="197" width="0.8797%" height="15" fill="rgb(215,77,49)" fg:x="183807" fg:w="1784"/><text x="90.8819%" y="207.50"></text></g><g><title>polones_core::ppu::MaskRegister::get_show_background (783 samples, 0.39%)</title><rect x="91.5160%" y="197" width="0.3861%" height="15" fill="rgb(248,100,22)" fg:x="185600" fg:w="783"/><text x="91.7660%" y="207.50"></text></g><g><title>polones_core::ppu::MaskRegister::get_show_sprites (41 samples, 0.02%)</title><rect x="91.9021%" y="197" width="0.0202%" height="15" fill="rgb(208,67,9)" fg:x="186383" fg:w="41"/><text x="92.1521%" y="207.50"></text></g><g><title>polones_core::ppu::Loopy::get_coarse_x_scroll (154 samples, 0.08%)</title><rect x="92.0338%" y="181" width="0.0759%" height="15" fill="rgb(219,133,21)" fg:x="186650" fg:w="154"/><text x="92.2838%" y="191.50"></text></g><g><title>polones_core::ppu::Loopy::set_coarse_x_scroll (213 samples, 0.11%)</title><rect x="92.1097%" y="181" width="0.1050%" height="15" fill="rgb(246,46,29)" fg:x="186804" fg:w="213"/><text x="92.3597%" y="191.50"></text></g><g><title>polones_core::ppu::Ppu::increment_v_horizontal (654 samples, 0.32%)</title><rect x="91.9223%" y="197" width="0.3225%" height="15" fill="rgb(246,185,52)" fg:x="186424" fg:w="654"/><text x="92.1723%" y="207.50"></text></g><g><title>polones_core::ppu::Loopy::set_nametable_select (61 samples, 0.03%)</title><rect x="92.2147%" y="181" width="0.0301%" height="15" fill="rgb(252,136,11)" fg:x="187017" fg:w="61"/><text x="92.4647%" y="191.50"></text></g><g><title>polones_core::ppu::Ppu::increment_v_vertical (44 samples, 0.02%)</title><rect x="92.2448%" y="197" width="0.0217%" height="15" fill="rgb(219,138,53)" fg:x="187078" fg:w="44"/><text x="92.4948%" y="207.50"></text></g><g><title>polones_core::nes::PpuBus::read (67 samples, 0.03%)</title><rect x="92.5086%" y="181" width="0.0330%" height="15" fill="rgb(211,51,23)" fg:x="187613" fg:w="67"/><text x="92.7586%" y="191.50"></text></g><g><title>&lt;polones_core::mapper::mapper_000::Mapper000 as polones_core::mapper::Mapper&gt;::ppu_read (36 samples, 0.02%)</title><rect x="92.5239%" y="165" width="0.0178%" height="15" fill="rgb(247,221,28)" fg:x="187644" fg:w="36"/><text x="92.7739%" y="175.50"></text></g><g><title>polones_core::ppu::Ppu::set_oam_pattern (580 samples, 0.29%)</title><rect x="92.2670%" y="197" width="0.2860%" height="15" fill="rgb(251,222,45)" fg:x="187123" fg:w="580"/><text x="92.5170%" y="207.50"></text></g><g><title>polones_core::ppu::Ppu::tick (218 samples, 0.11%)</title><rect x="92.5530%" y="197" width="0.1075%" height="15" fill="rgb(217,162,53)" fg:x="187703" fg:w="218"/><text x="92.8030%" y="207.50"></text></g><g><title>polones_core::ppu::Ppu::tick::{{closure}} (3,445 samples, 1.70%)</title><rect x="92.6605%" y="197" width="1.6987%" height="15" fill="rgb(229,93,14)" fg:x="187921" fg:w="3445"/><text x="92.9105%" y="207.50"></text></g><g><title>std::panic::catch_unwind (164,804 samples, 81.26%)</title><rect x="13.0977%" y="357" width="81.2619%" height="15" fill="rgb(209,67,49)" fg:x="26563" fg:w="164804"/><text x="13.3477%" y="367.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (164,804 samples, 81.26%)</title><rect x="13.0977%" y="341" width="81.2619%" height="15" fill="rgb(213,87,29)" fg:x="26563" fg:w="164804"/><text x="13.3477%" y="351.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (164,804 samples, 81.26%)</title><rect x="13.0977%" y="325" width="81.2619%" height="15" fill="rgb(205,151,52)" fg:x="26563" fg:w="164804"/><text x="13.3477%" y="335.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (164,804 samples, 81.26%)</title><rect x="13.0977%" y="309" width="81.2619%" height="15" fill="rgb(253,215,39)" fg:x="26563" fg:w="164804"/><text x="13.3477%" y="319.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (164,804 samples, 81.26%)</title><rect x="13.0977%" y="293" width="81.2619%" height="15" fill="rgb(221,220,41)" fg:x="26563" fg:w="164804"/><text x="13.3477%" y="303.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (164,804 samples, 81.26%)</title><rect x="13.0977%" y="277" width="81.2619%" height="15" fill="rgb(218,133,21)" fg:x="26563" fg:w="164804"/><text x="13.3477%" y="287.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (164,804 samples, 81.26%)</title><rect x="13.0977%" y="261" width="81.2619%" height="15" fill="rgb(221,193,43)" fg:x="26563" fg:w="164804"/><text x="13.3477%" y="271.50">core::ops::function::FnOnce::call_once</text></g><g><title>polones_test::main (164,804 samples, 81.26%)</title><rect x="13.0977%" y="245" width="81.2619%" height="15" fill="rgb(240,128,52)" fg:x="26563" fg:w="164804"/><text x="13.3477%" y="255.50">polones_test::main</text></g><g><title>polones_core::nes::Nes::run_one_cpu_tick (164,212 samples, 80.97%)</title><rect x="13.3896%" y="229" width="80.9700%" height="15" fill="rgb(253,114,12)" fg:x="27155" fg:w="164212"/><text x="13.6396%" y="239.50">polones_core::nes::Nes::run_one_cpu_tick</text></g><g><title>polones_core::ppu::Ppu::tick (122,980 samples, 60.64%)</title><rect x="33.7204%" y="213" width="60.6392%" height="15" fill="rgb(215,223,47)" fg:x="68387" fg:w="122980"/><text x="33.9704%" y="223.50">polones_core::ppu::Ppu::tick</text></g><g><title>__libc_start_main_alias_2 (164,806 samples, 81.26%)</title><rect x="13.0972%" y="485" width="81.2629%" height="15" fill="rgb(248,225,23)" fg:x="26562" fg:w="164806"/><text x="13.3472%" y="495.50">__libc_start_main_alias_2</text></g><g><title>__libc_start_call_main (164,806 samples, 81.26%)</title><rect x="13.0972%" y="469" width="81.2629%" height="15" fill="rgb(250,108,0)" fg:x="26562" fg:w="164806"/><text x="13.3472%" y="479.50">__libc_start_call_main</text></g><g><title>main (164,805 samples, 81.26%)</title><rect x="13.0977%" y="453" width="81.2624%" height="15" fill="rgb(228,208,7)" fg:x="26563" fg:w="164805"/><text x="13.3477%" y="463.50">main</text></g><g><title>std::rt::lang_start_internal (164,805 samples, 81.26%)</title><rect x="13.0977%" y="437" width="81.2624%" height="15" fill="rgb(244,45,10)" fg:x="26563" fg:w="164805"/><text x="13.3477%" y="447.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (164,805 samples, 81.26%)</title><rect x="13.0977%" y="421" width="81.2624%" height="15" fill="rgb(207,125,25)" fg:x="26563" fg:w="164805"/><text x="13.3477%" y="431.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (164,805 samples, 81.26%)</title><rect x="13.0977%" y="405" width="81.2624%" height="15" fill="rgb(210,195,18)" fg:x="26563" fg:w="164805"/><text x="13.3477%" y="415.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (164,805 samples, 81.26%)</title><rect x="13.0977%" y="389" width="81.2624%" height="15" fill="rgb(249,80,12)" fg:x="26563" fg:w="164805"/><text x="13.3477%" y="399.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (164,805 samples, 81.26%)</title><rect x="13.0977%" y="373" width="81.2624%" height="15" fill="rgb(221,65,9)" fg:x="26563" fg:w="164805"/><text x="13.3477%" y="383.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>_dl_start_final (23 samples, 0.01%)</title><rect x="94.3606%" y="469" width="0.0113%" height="15" fill="rgb(235,49,36)" fg:x="191369" fg:w="23"/><text x="94.6106%" y="479.50"></text></g><g><title>_dl_sysdep_start (22 samples, 0.01%)</title><rect x="94.3611%" y="453" width="0.0108%" height="15" fill="rgb(225,32,20)" fg:x="191370" fg:w="22"/><text x="94.6111%" y="463.50"></text></g><g><title>_start (164,843 samples, 81.28%)</title><rect x="13.0918%" y="501" width="81.2811%" height="15" fill="rgb(215,141,46)" fg:x="26551" fg:w="164843"/><text x="13.3418%" y="511.50">_start</text></g><g><title>_dl_start (26 samples, 0.01%)</title><rect x="94.3601%" y="485" width="0.0128%" height="15" fill="rgb(250,160,47)" fg:x="191368" fg:w="26"/><text x="94.6101%" y="495.50"></text></g><g><title>polones_core::apu::Apu::tick (874 samples, 0.43%)</title><rect x="94.3734%" y="501" width="0.4310%" height="15" fill="rgb(216,222,40)" fg:x="191395" fg:w="874"/><text x="94.6234%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_10 (36 samples, 0.02%)</title><rect x="94.8088%" y="501" width="0.0178%" height="15" fill="rgb(234,217,39)" fg:x="192278" fg:w="36"/><text x="95.0588%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_29 (93 samples, 0.05%)</title><rect x="94.8271%" y="501" width="0.0459%" height="15" fill="rgb(207,178,40)" fg:x="192315" fg:w="93"/><text x="95.0771%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_4C (113 samples, 0.06%)</title><rect x="94.8862%" y="501" width="0.0557%" height="15" fill="rgb(221,136,13)" fg:x="192435" fg:w="113"/><text x="95.1362%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_68 (25 samples, 0.01%)</title><rect x="94.9425%" y="501" width="0.0123%" height="15" fill="rgb(249,199,10)" fg:x="192549" fg:w="25"/><text x="95.1925%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_90 (31 samples, 0.02%)</title><rect x="94.9666%" y="501" width="0.0153%" height="15" fill="rgb(249,222,13)" fg:x="192598" fg:w="31"/><text x="95.2166%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_A9 (34 samples, 0.02%)</title><rect x="94.9997%" y="501" width="0.0168%" height="15" fill="rgb(244,185,38)" fg:x="192665" fg:w="34"/><text x="95.2497%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_B0 (26 samples, 0.01%)</title><rect x="95.0179%" y="501" width="0.0128%" height="15" fill="rgb(236,202,9)" fg:x="192702" fg:w="26"/><text x="95.2679%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_C9 (45 samples, 0.02%)</title><rect x="95.0401%" y="501" width="0.0222%" height="15" fill="rgb(250,229,37)" fg:x="192747" fg:w="45"/><text x="95.2901%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_D0 (102 samples, 0.05%)</title><rect x="95.0623%" y="501" width="0.0503%" height="15" fill="rgb(206,174,23)" fg:x="192792" fg:w="102"/><text x="95.3123%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::run_F0 (126 samples, 0.06%)</title><rect x="95.1234%" y="501" width="0.0621%" height="15" fill="rgb(211,33,43)" fg:x="192916" fg:w="126"/><text x="95.3734%" y="511.50"></text></g><g><title>polones_core::cpu::Cpu::tick (856 samples, 0.42%)</title><rect x="95.1865%" y="501" width="0.4221%" height="15" fill="rgb(245,58,50)" fg:x="193044" fg:w="856"/><text x="95.4365%" y="511.50"></text></g><g><title>polones_core::nes::CpuBus::read (2,998 samples, 1.48%)</title><rect x="95.6091%" y="501" width="1.4783%" height="15" fill="rgb(244,68,36)" fg:x="193901" fg:w="2998"/><text x="95.8591%" y="511.50"></text></g><g><title>polones_core::nes::Nes::run_one_cpu_tick (1,213 samples, 0.60%)</title><rect x="97.0928%" y="501" width="0.5981%" height="15" fill="rgb(232,229,15)" fg:x="196910" fg:w="1213"/><text x="97.3428%" y="511.50"></text></g><g><title>polones_core::ppu::Ppu::set_oam_pattern (50 samples, 0.02%)</title><rect x="97.6909%" y="501" width="0.0247%" height="15" fill="rgb(254,30,23)" fg:x="198123" fg:w="50"/><text x="97.9409%" y="511.50"></text></g><g><title>polones_core::ppu::Ppu::tick (4,627 samples, 2.28%)</title><rect x="97.7156%" y="501" width="2.2815%" height="15" fill="rgb(235,160,14)" fg:x="198173" fg:w="4627"/><text x="97.9656%" y="511.50">p..</text></g><g><title>all (202,806 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(212,155,44)" fg:x="0" fg:w="202806"/><text x="0.2500%" y="543.50"></text></g><g><title>polones-test (202,806 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(226,2,50)" fg:x="0" fg:w="202806"/><text x="0.2500%" y="527.50">polones-test</text></g></svg></svg>